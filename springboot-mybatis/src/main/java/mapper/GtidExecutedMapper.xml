<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lhq.springboot.base.mapper.GtidExecutedMapper">
  <resultMap id="BaseResultMap" type="com.lhq.springboot.base.enpty.GtidExecuted">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 23 23:18:55 CST 2017.
    -->
    <id column="source_uuid" jdbcType="CHAR" property="sourceUuid" />
    <id column="interval_start" jdbcType="BIGINT" property="intervalStart" />
    <result column="interval_end" jdbcType="BIGINT" property="intervalEnd" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 23 23:18:55 CST 2017.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 23 23:18:55 CST 2017.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 23 23:18:55 CST 2017.
    -->
    source_uuid, interval_start, interval_end
  </sql>
  <select id="selectByExample" parameterType="com.lhq.springboot.base.enpty.GtidExecutedExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 23 23:18:55 CST 2017.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from gtid_executed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.lhq.springboot.base.enpty.GtidExecutedKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 23 23:18:55 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    from gtid_executed
    where source_uuid = #{sourceUuid,jdbcType=CHAR}
      and interval_start = #{intervalStart,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.lhq.springboot.base.enpty.GtidExecutedKey">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 23 23:18:55 CST 2017.
    -->
    delete from gtid_executed
    where source_uuid = #{sourceUuid,jdbcType=CHAR}
      and interval_start = #{intervalStart,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lhq.springboot.base.enpty.GtidExecutedExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 23 23:18:55 CST 2017.
    -->
    delete from gtid_executed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lhq.springboot.base.enpty.GtidExecuted">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 23 23:18:55 CST 2017.
    -->
    insert into gtid_executed (source_uuid, interval_start, interval_end
      )
    values (#{sourceUuid,jdbcType=CHAR}, #{intervalStart,jdbcType=BIGINT}, #{intervalEnd,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lhq.springboot.base.enpty.GtidExecuted">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 23 23:18:55 CST 2017.
    -->
    insert into gtid_executed
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sourceUuid != null">
        source_uuid,
      </if>
      <if test="intervalStart != null">
        interval_start,
      </if>
      <if test="intervalEnd != null">
        interval_end,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sourceUuid != null">
        #{sourceUuid,jdbcType=CHAR},
      </if>
      <if test="intervalStart != null">
        #{intervalStart,jdbcType=BIGINT},
      </if>
      <if test="intervalEnd != null">
        #{intervalEnd,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lhq.springboot.base.enpty.GtidExecutedExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 23 23:18:55 CST 2017.
    -->
    select count(*) from gtid_executed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 23 23:18:55 CST 2017.
    -->
    update gtid_executed
    <set>
      <if test="record.sourceUuid != null">
        source_uuid = #{record.sourceUuid,jdbcType=CHAR},
      </if>
      <if test="record.intervalStart != null">
        interval_start = #{record.intervalStart,jdbcType=BIGINT},
      </if>
      <if test="record.intervalEnd != null">
        interval_end = #{record.intervalEnd,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 23 23:18:55 CST 2017.
    -->
    update gtid_executed
    set source_uuid = #{record.sourceUuid,jdbcType=CHAR},
      interval_start = #{record.intervalStart,jdbcType=BIGINT},
      interval_end = #{record.intervalEnd,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lhq.springboot.base.enpty.GtidExecuted">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 23 23:18:55 CST 2017.
    -->
    update gtid_executed
    <set>
      <if test="intervalEnd != null">
        interval_end = #{intervalEnd,jdbcType=BIGINT},
      </if>
    </set>
    where source_uuid = #{sourceUuid,jdbcType=CHAR}
      and interval_start = #{intervalStart,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lhq.springboot.base.enpty.GtidExecuted">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 23 23:18:55 CST 2017.
    -->
    update gtid_executed
    set interval_end = #{intervalEnd,jdbcType=BIGINT}
    where source_uuid = #{sourceUuid,jdbcType=CHAR}
      and interval_start = #{intervalStart,jdbcType=BIGINT}
  </update>
</mapper>